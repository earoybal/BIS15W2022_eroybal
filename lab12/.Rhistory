dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
dateformat1_convert <- ymd(dateformat1)
dateformat1_convert
dateformat2_convert <- mdy(dateformat2)
dateformat3_convert <- mdy(dateformat3)
dateformat3_convert <- mdy(dateformat3)
dateformat3_convert
dateformat3_convert <- dmy(dateformat3)
dateformat3_convert
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
#install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list[[7]])
glimpse(spider_list)
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spider_list$Napa
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
table_A
names(table_B)
table_B
#join_type(firstTable, secondTable, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- full_join(spiders_all, spiders_locs, by = 'Accession')
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
dateformat1_convert <- ymd(dateformat1)
dateformat1_convert
dateformat2_convert <- mdy(dateformat2)
dateformat3_convert <- dmy(dateformat3)
dateformat3_convert
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list[[7]])
glimpse(spider_list)
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spider_list$Napa
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
table_A
names(table_B)
table_B
#join_type(firstTable, secondTable, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- full_join(spiders_all, spiders_locs, by = 'Accession')
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
dateformat1_convert <- ymd(dateformat1)
dateformat1_convert
dateformat2_convert <- mdy(dateformat2)
dateformat3_convert <- dmy(dateformat3)
dateformat3_convert
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("devtools")
#install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list[[7]])
glimpse(spider_list)
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
spider_list$Butte
spider_list$Napa
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
table_A
names(table_B)
table_B
#join_type(firstTable, secondTable, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- full_join(spiders_all, spiders_locs, by = 'Accession')
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
dateformat1_convert <- ymd(dateformat1)
dateformat1_convert
dateformat2_convert <- mdy(dateformat2)
dateformat3_convert <- dmy(dateformat3)
dateformat3_convert
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
#install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
#install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map1 <- get_map(bbox, maptype = "terrain-lines", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "toner", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude, size = .5)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude, size = .1)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), size = .5) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1, size = .5) +
geom_point(data = spiders, aes(longitude, latitude), size = .5) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1, size = .5, alpha = .5) +
geom_point(data = spiders, aes(longitude, latitude), size = .5) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1, size = .5, alpha = .5, color = 'red') +
geom_point(data = spiders, aes(longitude, latitude), size = .5) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), size=0.8)+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
uso_map
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
grizzly <- read.csv('data/bear-sightings.csv')
library(skimr)
library(naniar)
skim(grizzly)
miss_var_summary(grizzly)
grizzly <- read.csv('data/bear-sightings.csv')
skim(grizzly)
miss_var_summary(grizzly)
grizzly %>%
summarise(min_lat = min(latitude),
max_lat = max(latitude),
min_long = min(longitude),
max_long = max(longitude))
grizzly_lat <- c(55.02, 70.37)
grizzly_long <- c(-166.23, -131.26)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
grizzly_lat <- c(55.02, 70.37)
grizzly_long <- c(-166.23, -131.26)
grizzly_bbox <- make_bbox(grizzly_long, grizzly_lat, f = 0.05)
map1 <- get_map(bbox, maptype = 'terrain', source = 'stamen')
map1 <- get_map(grizzly_bbox, maptype = 'terrain', source = 'stamen')
ggmap(map1)
colnames(grizzly)
ggmap(lab1) +
geom_point(data = grizzly, aes(longitude, latitude))
ggmap(map1) +
geom_point(data = grizzly, aes(longitude, latitude))
ggmap(map1) +
geom_point(data = grizzly, aes(longitude, latitude), size = 0.5) +
labs(title = 'Grizzly Sightings',
y = 'Latitude',
x = 'Longitude')
ggmap(map1) +
geom_point(data = grizzly, aes(longitude, latitude), size = 0.75) +
labs(title = 'Grizzly Sightings',
y = 'Latitude',
x = 'Longitude')
ggmap(map1) +
geom_point(data = grizzly, aes(longitude, latitude), size = 1) +
labs(title = 'Grizzly Sightings',
y = 'Latitude',
x = 'Longitude')
wolves <- read.csv(here('data','wolves_data','wolves_dataset.csv'))
wolves <- read.csv(here('data','wolves_data','wolves_dataset.csv'))
wolves <- read.csv(here('data','wolves_data','wolves_dataset'))
wolves <- read.csv('data/wolves_data/wolves_dataset.csv')
skim(wolves)
miss_var_summary(wolves)
head(wolves)
?separate()
wolves_state <- wolves %>%
separate(c('state', 'pop'), sep = '.')
wolves_state <- wolves %>%
separate(pop, c('state', 'pop'), sep = '.')
n_unique(wolves$pop)
nrow(wolves)
n_unique(wolves_state_pop)
n_unique(wolves_state$pop)
view(wolves)
wolves_lower48 <- wolves %>%
filter(long <= 50, lat >= -124)
wolves_lower48 %>%
summarise(min_long = min(long),
max_long = max(long),
min_lat = min(lat),
max_lat = max(lat))
n_unique(wolves$pop)
wolves_lower48 <- wolves %>%
filter(lat <= 50, long >= -124)
wolves_lower48 %>%
summarise(min_long = min(long),
max_long = max(long),
min_lat = min(lat),
max_lat = max(lat))
wolves_lower48_lat <- c(33.89, 47.75)
wolves_lower48_long <- c(-110.99, -86.82)
wolves_lower48_bbox <- make_bbox(wolves_lower48_long, wolves_lower48_lat, f = .05)
terrain_lines_map <- get_map(bbox, maptype = 'terrain-lines', source = 'stamen')
terrain_lines_map <- get_map(wolves_lower48_bbox, maptype = 'terrain-lines', source = 'stamen')
ggmap(terrain_lines_map)
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude')
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, fill = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude')
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude')
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population')
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme(axis.title = element_text(hjust = .5))
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme(axis.title = element_text(hjust = rel))
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme(axis.title = element_text(hjust = 1))
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop)) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme(axis.text = element_text(hjust = 1))
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop), size = 2) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme(axis.text = element_text(hjust = 1))
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop), size = 3) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme(axis.text = element_text(hjust = 1))
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop), size = 3) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population') +
theme_minimal()
ggmap(terrain_lines_map) +
geom_point(data = wolves_lower48, aes(x = long, y = lat, color = pop), size = 3) +
labs(title = 'Location of Wolves in Lower 48 States',
x = 'Longitude',
y = 'Latitude',
color = 'Population')
