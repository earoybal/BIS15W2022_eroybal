library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info_clean <- superhero_info %>% clean_names()
colnames(superhero_info_clean)
library(glimpse)
library(skimr)
skim(superhero_info_clean)
head(superhero_info_clean)
view(superhero_info_clean)
superhero_info_clean %>%
ggplot(aes(x = alignment, y = weight)) +
geom_boxplot() +
labs(title = 'Weight distribution of good and bad superheroes')
superhero_info_clean %>%
ggplot(aes(x = alignment, y = weight), na.rm = T) +
geom_boxplot() +
labs(title = 'Weight distribution of good and bad superheroes')
superhero_info_clean %>%
na.exclude() %>%
ggplot(aes(x = alignment, y = weight)) +
geom_boxplot() +
labs(title = 'Weight distribution of good and bad superheroes')
superhero_info_clean %>%
na.exclude() %>%
ggplot(aes(x = alignment, y = weight, color = alignment)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5)
superhero_info_clean %>%
na.exclude() %>%
ggplot(aes(x = alignment, y = weight, color = alignment)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5)
labs(title = 'Weight distribution of good and bad superheroes')
superhero_info_clean %>%
na.exclude() %>%
ggplot(aes(x = gender, y = height, color = gender)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5) +
labs(title = 'Distribution of height among the different superhero genders')
superhero_info_clean %>%
#na.exclude() %>%
ggplot(aes(x = gender, y = height, color = gender)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5) +
labs(title = 'Distribution of height among the different superhero genders')
superhero_info_clean %>%
na.exclude(gender) %>%
ggplot(aes(x = gender, y = height, color = gender)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5) +
labs(title = 'Distribution of height among the different superhero genders')
superhero_info_clean %>%
na.exclude() %>%
ggplot(aes(x = gender, y = height, color = gender)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5) +
labs(title = 'Distribution of height among the different superhero genders')
?na.exclude()
superhero_info_clean %>%
filter(gender != 'NA') %>%
ggplot(aes(x = gender, y = height, color = gender)) +
geom_boxplot(alpha = .3, color = 'grey') +
geom_violin(alpha = .5) +
labs(title = 'Distribution of height among the different superhero genders')
head(beachbugs_long)
anyNA(beachbugs_long)
head(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x = site, y = year, fill = buglevels)) +
geom_tile() +
scale_fill_gradient(low = 'yellow', high = 'red')
beachbugs_long %>%
ggplot(aes(x = site, y = year, fill = buglevels)) +
geom_tile() +
scale_fill_gradient(low = 'yellow', high = 'red') +
coord_flip()
beachbugs_long %>%
ggplot(aes(x = site, y = year, fill = buglevels)) +
geom_tile() +
scale_fill_gradient(low = 'yellow', high = 'red') +
coord_flip() +
labs(title = 'Prevalence of bugs at different beaches',
fill = 'bug levels')
beachbugs_long %>%
ggplot(aes(x = site, y = year, fill = buglevels)) +
geom_tile() +
scale_fill_gradient(low = 'yellow', high = 'red') +
coord_flip() +
labs(title = 'Prevalence of bugs at different beaches',
fill = 'bug levels')
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized %>%
ggplot(aes(x = site, y = year, fill = norm_buglevel)) +
geom_tile() +
scale_fill_gradient(low = 'yellow', high = 'red') +
coord_flip()
beachbugs_normalized %>%
ggplot(aes(x = site, y = year, fill = norm_buglevel)) +
geom_tile() +
scale_fill_gradient(low = 'yellow', high = 'red') +
coord_flip() +
labs(title = 'normalized bug levels at beaches',
fill = 'normalized bug level')
evil_vec <- superhero_info_clean %>%
filter(alignment == "bad")%>%
pull(name)
red_eyes_vec <- superhero_info_clean %>%
filter(eye_color == 'red') %>%
pull(name)
male_vec <- superhero_info_clean %>%
filter(gender == 'male') %>%
pull(name)
# bald
bald_vec <- superhero_info_clean %>%
filter(hair_color == 'No Hair')
# bald
bald_vec <- superhero_info_clean %>%
filter(hair_color == 'No Hair') %>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
questions_list <- list(evil_vec, red_eyes_vec, male_vec, bald_vec)
# something like:
ggVennDiagram(questions_list, category.names = c("evil", "red eyes", "male", "bald"))
male_vec <- superhero_info_clean %>%
filter(gender == 'Male') %>%
pull(name)
# something like:
ggVennDiagram(questions_list, category.names = c("evil", "red eyes", "male", "bald"))
# something like:
ggVennDiagram(questions_list, category.names = c("evil", "red eyes", "male", "bald"))
male_vec <- superhero_info_clean %>%
filter(gender == 'Male') %>%
pull(name)
questions_list <- list(evil_vec, red_eyes_vec, male_vec, bald_vec)
# something like:
ggVennDiagram(questions_list, category.names = c("evil", "red eyes", "male", "bald"))
superhero_info_clean %>%
filter(alignment == 'evil',
eye_color == 'red',
gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'bad',
eye_color == 'red',
gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'bad',
eye_color == 'red',
gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'evil',
eye_color == 'red',
gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'evil',
eye_color == 'red',
#gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'evil',
eye_color == 'red',
#gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'evil',
#eye_color == 'red',
#gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'evil')
superhero_info_clean %>%
filter(alignment == 'bad',
eye_color == 'red',
gender != 'Male',
hair_color == 'No Hair')
superhero_info_clean %>%
filter(alignment == 'bad')
superhero_info_clean %>%
filter(alignment == 'bad',
eye_color == 'red')
superhero_info_clean %>%
filter(alignment == 'bad',
eye_color == 'red',
gender != 'Male')
race_vec <- superhero_info_clean %>%
filter(race == 'Human') %>%
pull(name)
race_vec <- superhero_info_clean %>%
filter(race == 'Human') %>%
pull(name)
hair_vec <- superhero_info_clean %>%
filter(hair_color == 'Black') %>%
pull(name)
publisher_vec <- superhero_info_clean %>%
filter(publisher == 'Marvel Comics') %>%
pull(name)
race_hair_publisher_list <- list(race_vec, hair_vec, publisher_vec)
ggVennDiagram(race_hair_publisher, category.names = c('Human', 'Black Hair', 'Marvel Comics'))
race_hair_publisher_list <- list(race_vec, hair_vec, publisher_vec)
ggVennDiagram(race_hair_publisher_list, category.names = c('Human', 'Black Hair', 'Marvel Comics'))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
ggVennDiagram(race_hair_publisher_list, category.names = c('Human', 'Black Hair', 'Marvel Comics')) +
labs(title = "How many human superheroes with black hair were created by Marvel")
ggVennDiagram(race_hair_publisher_list, category.names = c('Human', 'Black Hair', 'Marvel Comics')) +
labs(title = "How many human superheroes with black hair were created by Marvel?")
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 5) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 8) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +
geom_text_wordcloud() +
scale_size_area(max = 20)
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20)
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10)
